{% extends 'base.html.twig' %}

{% block title %}Transactions{% endblock %}

{% block body %}
<style>
    .shorten {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        width: 50px;
        display: inline-block;
    }
    .eth-icon {
        width: 10px;
        padding-bottom: 6px;
        margin-left: 3px;
    }
</style>
<div class="row row-cols-1 row-cols-md-3 row-cols-lg-6 row-cols-xl-8 g-4">
{% for transactionData in transactions %}
    {% set transaction = transactionData[0] %}
    {% set floorPrice = transactionData.price %}
    <div class="col">
    <div class="card h-100">
        <div class="card-body">
            <h5 class="card-title">{{ transaction.tokenSymbol }}</h5>
            <p>Initial Price: <b>{{ transaction.price / countByTransactionHash[transaction.transactionHash].count }}</b> <img class="eth-icon" src="https://ethereum.org/static/6b935ac0e6194247347855dc3d328e83/31987/eth-diamond-black.png" alt="ethereum"/></p>
            <p>Floor Price: <b>{{ floorPrice }}</b> <img class="eth-icon" src="https://ethereum.org/static/6b935ac0e6194247347855dc3d328e83/31987/eth-diamond-black.png" alt="ethereum"/></p>
            <p>Gas: <b>{{ transaction.gasPrice }}</b> <img class="eth-icon" src="https://ethereum.org/static/6b935ac0e6194247347855dc3d328e83/31987/eth-diamond-black.png" alt="ethereum"/></p>
            <!--<p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>-->
        </div>
        <div class="card-footer">
            <small id="copy-text-{{ transaction.tokenId }}" class="text-muted shorten">
                {{ transaction.tokenId }}
                <a href="#" id="copy-id" data-copy-target="copy-text-{{ transaction.tokenId }}" onclick="copyTokenId(this)"><i class="bi bi-clipboard"></i></a>
            </small>

        </div>
    </div>
    </div>
{% endfor %}
</div>
{# display navigation #}
<div class="navigation">
    {{ knp_pagination_render(transactions) }}
</div>
{% endblock %}

{% block javascripts_user_defined %}
    <script>
        function copyTokenId(copyButton) {
            var target = copyButton.getAttribute('data-copy-target');
            var targetElm = document.getElementById(target);

            var textArea = document.createElement("textarea");
            textArea.value = targetElm.textContent;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand("Copy");
            textArea.remove();
        }
    </script>
{% endblock %}
